// <auto-generated />
using System;
using AmazonSPApiTracker.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmazonSPApiTracker.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250611190848_FixInventoryRelation")]
    partial class FixInventoryRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.Inventory", b =>
                {
                    b.Property<string>("SkuId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Fulfillable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Inbound")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<int>("Researching")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reserved")
                        .HasColumnType("INTEGER");

                    b.HasKey("SkuId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.SalesHistory", b =>
                {
                    b.Property<string>("SkuId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("UnitsSold")
                        .HasColumnType("INTEGER");

                    b.HasKey("SkuId", "Date");

                    b.ToTable("SalesHistories");
                });

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.Shipment", b =>
                {
                    b.Property<string>("ShipmentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DestinationFulfillmentCenterId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShipmentId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.ShipmentItem", b =>
                {
                    b.Property<string>("ShipmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkuId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityReceived")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShipmentId", "SkuId");

                    b.HasIndex("SkuId");

                    b.ToTable("ShipmentItems");
                });

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.Sku", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Asin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skus");
                });

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.Inventory", b =>
                {
                    b.HasOne("AmazonSPApiTracker.Domain.Entities.Sku", "Sku")
                        .WithMany()
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.SalesHistory", b =>
                {
                    b.HasOne("AmazonSPApiTracker.Domain.Entities.Sku", "Sku")
                        .WithMany()
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.ShipmentItem", b =>
                {
                    b.HasOne("AmazonSPApiTracker.Domain.Entities.Shipment", "Shipment")
                        .WithMany("Items")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonSPApiTracker.Domain.Entities.Sku", "Sku")
                        .WithMany()
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("AmazonSPApiTracker.Domain.Entities.Shipment", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
